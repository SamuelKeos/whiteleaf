[Threat - WL002 - Mass Mailer Traffic Profile - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1567"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL002 - Mass Mailer Traffic Profile
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"src","risk_object_type":"system","risk_score":45}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 2 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats summariesonly=true count AS num_mass_mailings dc(All_Traffic.dest) AS unique_destinations from datamodel=Network_Traffic where  All_Traffic.protocol=smtp by _time All_Traffic.src span=10min\
| rename All_Traffic.src AS src\
| eventstats median(num_mass_mailings) as median p25(num_mass_mailings) as p25 p75(num_mass_mailings) as p75 by src\
| eval IQR=(p75-p25)\
| eval sensitivity = 10\
| eval upperBound=(median+IQR*sensitivity)\
| eval isOutlier=if(num_mass_mailings > upperBound, 1, 0)\
| where (isOutlier=1)\
| eval event_time = strftime(_time,"%F %H:%M:%S")\
| eval severity=case(num_mass_mailings>100,"high",num_mass_mailings>10,"medium",1=1,"low")\
| eval urgency="high"\
| eval desc = "The host ".src." sent ".count." emails to ".unique_destinations." hosts."

[Threat - WL003 - DNS Tunneling - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1572"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL003 - DNS Tunneling
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"src","risk_object_type":"system","risk_score":60}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 3 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Network_Resolution where NOT (DNS.message_type=Pointer OR DNS.message_type=PTR) by DNS.query DNS.src\
| rename DNS.* AS *\
| eval tlds=split(query,".")\
| eval tld=mvindex(tlds,-1)\
| eval tld_len=len(tld)\
| search tld_len<=24\
| eval query_length = len(query)\
| table query query_length record_type count src\
| eventstats median(query_length) as median p25(query_length) as p25 p75(query_length) as p75\
| eval IQR=(p75-p25)\
| eval sensitivity = 10\
| eval upperBound=(median+IQR*sensitivity)\
| eval isOutlier=if(query_length > upperBound, 1, 0)\
| where (isOutlier=1) AND query_length>100\
| eval event_time = strftime(_time,"%F %H:%M:%S")\
| eval severity="high"\
| eval urgency="high"\
| eval desc = "The asset ".src." produced an anomalously long ".query length." DNS request."

[Threat - WL004 - Anomalous ANY DNS Querying - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1498"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL004 - Anomalous ANY DNS Querying
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"dest","risk_object_type":"system","risk_score":60}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 4 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Network_Resolution where nodename=DNS DNS.message_type=QUERY DNS.record_type=ANY by DNS.dest _time span=1h\
| rename DNS.* AS *\
| eventstats median(count) as median p25(count) as p25 p75(count) as p75 by dest\
| eval IQR=(p75-p25)\
| eval sensitivity = 3\
| eval upperBound=(median+IQR*sensitivity)\
| eval isOutlier=if(count > upperBound, 1, 0)\
| where (isOutlier=1)\
| eval event_time = strftime(_time,"%F %H:%M:%S")\
| eval severity="high"\
| eval urgency="high"\
| eval desc = "The anomalously large number of ANY DNS requests associated with ".dest." indicate a potential mailicious DDoS attack."

[Threat - WL005 - Windows Exchange Autodiscover SSRF Abuse - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1190","T1133"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL005 - Windows Exchange Autodiscover SSRF Abuse
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":80},{"risk_object_field":"dest","risk_object_type":"system","risk_score":80}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.status=200) AND Web.http_method=POST by Web.src Web.status Web.uri_path Web.dest Web.http_method Web.uri_query Web.http_user_agent \
| `drop_dm_object_name("Web")` \
| eval is_autodiscover=if(like(lower(uri_path),"%autodiscover/autodiscover.json%"),1,0) \
| eval has_rps_cat=if(like(lower(uri_query),"%x-rps-cat=%"),1,0) \
| eval exchange_backend=if(like(lower(uri_query),"%/powershell/?%"),1,0) \
| eval mapi=if(like(uri_query,"%/mapi/%"),1,0) \
| eval suspicious_agent=if(match(lower(http_user_agent), "python\
|urllib"),1,0) \
| addtotals fieldname=Score is_autodiscover, has_rps_cat, exchange_backend, mapi, suspicious_agent \
| where Score >= 3 \
| fields Score, src, dest, status, uri_query, uri_path, http_method, http_user_agent

[Threat - WL014 - Blocked AWS Sign In Attempt Followed by Success - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1110"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL014 - Blocked AWS Sign In Attempt Followed by Success
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":50}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 3600s
alert.track = 1
counttype = number of events
cron_schedule = 14 * * * *
disabled = 1
dispatch.earliest_time = -130m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=aws \
``` replace with... `cloudtrail` eventType="AwsConsoleSignIn" ```\
| stats count max(_time) AS latest_time min(_time) AS earliest_time by user action\
| eval most_recent_failure = if(action="failure",latest_time,0)\
| eval latest_success = if(action="success",earliest_time,9999999999)\
| stats max(most_recent_failure) As most_recent_failure  min(latest_success) AS latest_success by user| where latest_success < most_recent_failure\
| table user latest_success most_recent_failure

[Threat - WL019 - O365 Anomalous Download Activity - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1213"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL019 - O365 Anomalous Download Activity
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":40}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 86400s
alert.track = 1
counttype = number of events
cron_schedule = 19 * * * *
disabled = 1
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=o365 ```add o365 macro``` sourcetype=o365:management:activity (Workload=OneDrive OR Workload=SharePoint) action=downloaded NOT user="app@sharepoint"\
| bin span=1h _time\
| stats count sum(FileSizeBytes) as total_size values(Workload) as orig_source values(SourceFileName) as file_names dc(SourceFileExtension) as distinct_number_of_file_extensions by _time user\
| eventstats median(count) as median_1 p25(count) as p25_1 p75(count) as p75_1 median(total_size) as median_2 p25(total_size) as p25_2 p75(total_size) as p75_2 by user\
| eval IQR_1=(p75_1-p25_1)\
| eval IQR_2=(p75_2-p25_2)\
| eval sensitivity = 2\
| eval upperBound_1=(median_1+IQR_1*sensitivity)\
| eval upperBound_2=(median_2+IQR_2*sensitivity)\
| eval isOutlier_1=if(count > upperBound, 1, 0)\
| eval isOutlier_2=if(total_size > upperBound, 1, 0)\
| where (isOutlier_1=1 AND isOutlier_2=1)

[Threat - WL023 - AWS Impossible Travel - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL023 - AWS Impossible Travel
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":80}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 10800s
alert.track = 1
counttype = number of events
cron_schedule = 23 * * * *
disabled = 1
dispatch.earliest_time = -4h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=aws_cloudtrail sourcetype=aws:cloudtrail user=* ```aws index```\
| sort 0 user, _time \
| streamstats window=1 current=f values(_time) as last_time values(src) as last_src by user\
| iplocation last_src \
| rename lat as last_lat lon as last_lon \
| eval location = City . "|" . Country . "|" . Region\
| iplocation src\
| eval rlat1 = pi()*last_lat/180, rlat2=pi()*lat/180, rlat = pi()*(lat-last_lat)/180, rlon= pi()*(lon-last_lon)/180 \
| eval a = sin(rlat/2) * sin(rlat/2) + cos(rlat1) * cos(rlat2) * sin(rlon/2) * sin(rlon/2) \
| eval c = 2 * atan2(sqrt(a), sqrt(1-a)) \
| eval distance = 6371 * c, time_difference_in_min = round((_time - last_time) / 60,2), speed=round(distance/ ( time_difference_hours),2) \
| fields - rlat* a c\
| eval date=strftime(_time, "%m/%d/%Y")\
| stats values(aws_account_id) AS aws_accounts values(awsRegion) AS aws_regions values(eventName) AS event_names values(eval(mvappend(last_Country, Country))) as src_country values(eval(mvappend(last_City, City))) as src_city values(eval(mvappend(last_Region, Region))) as Region  values(lat) AS latitudes values(lon) AS longitudes values(userAgent) min(time_difference_in_min) as time_difference_in_min values(src) AS src_ip by date user distance\
| eval dc_lat=mvcount(latitudes), dc_lon=mvcount(longitudes), dc_city=mvcount(src_city), velocity_in_mph=(distance*0.621371)/(time_difference_in_min/60)\
| where dc_lat>1 AND dc_lon>1 AND dc_city>1 AND (time_difference_in_min=0.00 OR velocity_in_mph>700)\
| fields - dc_city dc_lat dc_lon\
```exclude source cities```

[Threat - WL001 - DGA Domains - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1568"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL001 - DGA Domains
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 1 * * * *
description = This search looks for traffic from sources to DGA domains. The riskiness of the domain (1-100) is returned from Whiteleaf AI and then applied to the source in the risk index.
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats values(DNS.answer) as IPs min(_time) as firstTime  max(_time) as lastTime from datamodel=Network_Resolution by DNS.src, DNS.query \
| `drop_dm_object_name(DNS)` \
| rename query AS domain \
| fields IPs, src, domain, firstTime, lastTime\
| eval whiteleafuc="WLUC1"\
| eval prompt = domain\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL006 - SQL Injection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1190"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL006 - SQL Injection
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 6 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Web where Web.dest_category=web_server AND (Web.url_length > 1024 OR Web.http_user_agent_length > 200) by Web.src Web.dest Web.url Web.url_length Web.http_user_agent \
| `drop_dm_object_name("Web")` \
| eval url=lower(url) \
| eval num_sql_cmds=mvcount(split(url, "alter%20table")) + mvcount(split(url, "between")) + mvcount(split(url, "create%20table")) + mvcount(split(url, "create%20database")) + mvcount(split(url, "create%20index")) + mvcount(split(url, "create%20view")) + mvcount(split(url, "delete")) + mvcount(split(url, "drop%20database")) + mvcount(split(url, "drop%20index")) + mvcount(split(url, "drop%20table")) + mvcount(split(url, "exists")) + mvcount(split(url, "exec")) + mvcount(split(url, "group%20by")) + mvcount(split(url, "having")) + mvcount(split(url, "insert%20into")) + mvcount(split(url, "inner%20join")) + mvcount(split(url, "left%20join")) + mvcount(split(url, "right%20join")) + mvcount(split(url, "full%20join")) + mvcount(split(url, "select")) + mvcount(split(url, "distinct")) + mvcount(split(url, "select%20top")) + mvcount(split(url, "union")) + mvcount(split(url, "xp_cmdshell")) - 24 \
| where num_sql_cmds > 1\
| eval whiteleafuc="WLUC6"\
| eval prompt = url\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL010 - Suspicious Powershell Commands - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1059"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL010 - Suspicious Powershell Commands
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  \
| rename Processes.* AS *\
| search (process=*-EncodedCommand* OR process=*-enc*) process=*-Exec* \
| eval whiteleafuc="WLUC10"\
| eval prompt=process\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL011 - Suspicious Linux Commands - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1059"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL011 - Suspicious Linux Commands
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 11 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count values(Processes.process) values(Processes.process_name) values(Processes.parent_process_name) dc(Processes.process) as distinct_commands dc(Processes.process_name) as distinct_process_names min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where [\
|inputlookup linux_tool_discovery_process \
| rename process as Processes.process \
|table Processes.process] by _time span=5m Processes.user Processes.dest \
| rename Processes.* AS *\
| where distinct_commands > 20 AND distinct_process_names > 1\
| eval whiteleafuc="WLUC11"\
| eval prompt=process\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL012 - Monti Chrome Ransomware Attack - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1072"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL012 - Monti Chrome Ransomware Attack
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 12 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats  values(Processes.process) AS processes values(Processes.action) AS action min(_time) AS attack_start_time values(Processes.os) AS os values(Processes.hash) AS hashes from datamodel=Endpoint.Processes by Processes.dest Processes.user \
| rename Processes.* AS * \
| search processes="*chrome*"\
| eval prompt="Processes". processes ." Hashes ". hashes\
| eval whiteleafuc="WLUC12"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL015 - Windows Credential Dumping - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL015 - Windows Credential Dumping
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=windows ```needs to look for sysmon data``` EventCode=10 TargetImage=*\\lsass.exe granted_access IN ("0x01000", "0x1010", "0x1038", "0x40", "0x1400", "0x1fffff", "0x1410", "0x143a", "0x1438", "0x1000") CallTrace IN ("*dbgcore.dll*", "*dbghelp.dll*", "*ntdll.dll*", "*kernelbase.dll*", "*kernel32.dll*") NOT SourceUser IN ("NT AUTHORITY\\SYSTEM", "NT AUTHORITY\\NETWORK SERVICE") \
| stats count min(_time) as firstTime max(_time) as lastTime by CallTrace SecurityID TargetImage dest granted_access parent_process_id parent_process_name parent_process_path process_id process_name process_path signature user_id  \
| eval prompt=CallTrace.",". granted_access.",". TargetImage\
| eval whiteleafuc="WLUC15"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user_id param.risk_object_type=user

[Threat - WL016 - Linux Deletion of Services or Jobs - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1070"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL016 - Linux Deletion of Services or Jobs
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 16 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where (Filesystem.action=deleted Filesystem.file_path IN ( "/etc/systemd/*", "*/lib/systemd/*", "*/run/systemd/*") Filesystem.file_path = "*.service") OR (Filesystem.action=deleted Filesystem.file_path="/etc/cron.*") by Filesystem.action Filesystem.dest Filesystem.file_access_time Filesystem.file_hash Filesystem.file_modify_time Filesystem.file_name Filesystem.file_path Filesystem.file_size Filesystem.process_id Filesystem.user\
| rename Filesystem.* AS *\
| eval prompt = file_path\
| eval whiteleafuc="WLUC16"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL017 - Linux Deletion of Critical Files - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1070"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL017 - Linux Deletion of Critical Files
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 17 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name =rm AND Processes.process= "* -rf *" AND Processes.process IN ("*/boot/*", "*/var/log/*", "*/etc/*", "*/dev/*") by Processes.action Processes.dest Processes.parent_process Processes.parent_process_exec Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_name Processes.process_path Processes.user\
| rename Processes.* AS *\
| eval prompt = process\
| eval whiteleafuc="WLUC17"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL018 - Linux Deletion of Infra Support - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1070"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL018 - Linux Deletion of Infra Support
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 18 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where (Filesystem.action=deleted Filesystem.file_path = "/etc/ssl/certs/*" Filesystem.file_path IN ("*.pem", "*.crt")) OR (Filesystem.action=deleted Filesystem.file_path IN ( "/etc/init.d/*")) by Filesystem.action Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.file_size Filesystem.user \
| rename Filesystem.* AS *\
| eval prompt = file_path\
| eval whiteleafuc="WLUC18"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL020 - O365 PST Exports - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1114"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL020 - O365 PST Exports
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 10800s
alert.track = 1
counttype = number of events
cron_schedule = 20 * * * *
disabled = 1
dispatch.earliest_time = -4h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=o365 ```add o365 macro``` sourcetype=o365:management:activity Category=ThreatManagement Name="eDiscovery search started or exported" NOT Severity=Informational \
| stats count earliest(_time) as firstTime latest(_time) as lastTime by Source Severity AlertEntityId Operation Name user\
| eval prompt=count\
| eval whiteleafuc="WLUC20"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL021 - Windows WMI Suspicious Execution - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1047"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL021 - Windows WMI Suspicious Execution
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 21 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=wmic.exe OR Processes.original_file_name=wmic.exe) Processes.process = "* process *" Processes.process = "* call *" Processes.process = "* create *" by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_name Processes.process_path Processes.user\
| rename Processes.* AS *\
| eval prompt=process\
| eval whiteleafuc="WLUC21"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL022 - Windows Suspicious CertUtil Activity - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1105"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL022 - Windows Suspicious CertUtil Activity
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 22 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where ((Processes.process_name=certutil.exe OR Processes.original_file_name=CertUtil.exe) (Processes.process="*urlcache*" OR Processes.process="*verifyctl*") (Processes.process="*/f *" OR Processes.process="*-f *")) OR (Processes.process_name=certutil.exe AND (Processes.process = "*-exportPFX*" OR Processes.process=*decode*)) by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_name Processes.process_path Processes.user \
| rename Processes.* AS *\
| eval prompt=process\
| eval whiteleafuc="WLUC22"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL024 - Windows Suspicious MSBuild Activity - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1127"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL024 - Windows Suspicious MSBuild Activity
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 24 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where ((Processes.parent_process_name IN ("wscript.exe", "cscript.exe") OR Processes.process_path!=*\\framework*\\v*\\* OR Processes.parent_process_name=wmiprvse.exe) AND (Processes.process_name=msbuild.exe OR Processes.original_file_name=MSBuild.exe)) OR (Processes.process_name!=msbuild.exe AND Processes.original_file_name=MSBuild.exe) by Processes.action Processes.dest Processes.parent_process Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_name Processes.process_path Processes.user \
|  rename Processes.* AS *\
| eval prompt=process\
| eval whiteleafuc="WLUC24"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL025 - Windows Credential Access from Browser Password Store - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1012"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL025 - Windows Credential Access from Browser Password Store
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 25 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```wineventlog_security``` EventCode=4663 \
| stats count by _time object_file_path object_file_name dest process_name process_path process_id EventCode \
| lookup browser_app_list browser_object_path as object_file_path OUTPUT browser_process_name isAllowed \
| stats count min(_time) as firstTime max(_time) as lastTime values(object_file_name) values(browser_process_name) as browser_process_name values(isAllowed) AS isAllowed by dest process_name process_path process_id EventCode object_file_path\
| rex field=process_name "(?<extracted_process_name>[^\\\\]+)$" \
| eval isMalicious=if(match(browser_process_name, extracted_process_name), "0", "1") \
| where (isMalicious=1 and isAllowed="false") OR (object_file_path="*\\AppData\\Local\\Google\\Chrome\\User Data\\Local State" NOT (process_name IN ("*\\chrome.exe","*:\\Windows\\explorer.exe"))) OR (object_file_path="*\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data" AND NOT (process_path IN ("*:\\Windows\\explorer.exe", "*:\\Windows\\System32\\dllhost.exe", "*\\chrome.exe"))) \
| eval prompt=process_path\
| eval whiteleafuc="WLUC25"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL026 - Windows Suspicious Process Injection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1055"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL026 - Windows Suspicious Process Injection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 26 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```sysmon``` (EventCode=10 TargetImage IN ("*\\notepad.exe", "*\\wordpad.exe", "*\\calc.exe", "*\\mspaint.exe", "*\\lsass.exe", "*\\svchost.exe", "*\\backgroundtaskhost.exe", "*\\dllhost.exe", "*\\regsvr32.exe", "*\\searchprotocolhost.exe", "*\\werfault.exe", "*\\wuauclt.exe", "*\\spoolsv.exe", "*\\chrome.exe", "*\\edge.exe", "*\\firefox.exe") NOT (SourceImage IN ("*\\system32\\*","*\\syswow64\\*","*\\Program Files\\*", "*\\Program Files (x86)\\*")) GrantedAccess IN ("0x40","0x1fffff", "0x1f3fff")) OR (EventCode=8 TargetImage = "*.exe" AND NOT (SourceImage IN("C:\\Windows\\*", "C:\\Program File*", "%systemroot%\\*")))\
| stats values(user) as user, min(_time) as firstTime, max(_time) as lastTime, count by dest user_id parent_process_name process_name process_id signature SourceImage TargetImage CallTrace \
| eval CallTrace=split(CallTrace, "|") \
| eval prompt=TargetImage\
| eval whiteleafuc="WLUC26"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user_id\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL027 - Windows Suspicious Schedule Task Created - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1053"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL027 - Windows Suspicious Schedule Task Created
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 27 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```wineventlog_security``` EventCode=4698 TaskContent IN ("*\\users\\public\\*", "*\\programdata\\*", "*\\temp\\*", "*\\Windows\\Tasks\\*", "*\\appdata\\*", "*\\perflogs\\*", "*powershell.exe*", "*wscript.exe*", "*cscript.exe*", "*cmd.exe*", "*sh.exe*", "*ksh.exe*", "*zsh.exe*", "*bash.exe*", "*scrcons.exe*", "*pwsh.exe*") \
| stats count min(_time) as firstTime max(_time) as lastTime by Computer, TaskName, TaskContent \
| rename Computer as dest \
| eval prompt=TaskContent\
| eval whiteleafuc="WLUC27"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL028 - Suspicious Ransomware Extension - Rule]
action.correlationsearch.annotations = {"kill_chain_phases":[],"mitre_attack":["T1485"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL028 - Suspicious Ransomware Extension
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 28 * * * *
description = Identifies endpoints where users or processes create files with extensions commonly used by ransomware
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats min(_time) as firstTime max(_time) as lastTime count latest(Filesystem.user) as user values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.action Filesystem.dest Filesystem.file_access_time Filesystem.file_create_time Filesystem.file_hash Filesystem.file_modify_time Filesystem.file_name Filesystem.file_path Filesystem.file_size Filesystem.user \
| rename Filesystem.* AS *\
| rex field=file_name "(?<file_extension>\.[^\.]+)$" \
| lookup update=true ransomware_extensions_lookup Extensions AS file_extension OUTPUT Extensions Name \
| search Name !=False \
| eval prompt=file_name\
| eval whiteleafuc="WLUC28"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL031 - Suspicious Email Attachment Extensions - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1566.001"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL031 - Suspicious Email Attachment Extensions
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 31 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name="*" by All_Email.file_name, All_Email.src_user, All_Email.message_id \
| rename All_Email.* AS *\
| eval prompt=file_name\
| eval whiteleafuc = "WLUC31"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src_user param.risk_object_type=user

[Threat - WL032 - Suspicious BITS Activity - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1197","T1105"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL032 - BITSAdmin Download File/BITS Job Persistence
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 32 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process (Processes.process_name=bitsadmin.exe OR Processes.original_file_name=bitsadmin.exe) IN ("*transfer*", "*addfile*", *create*, *addfile*, *setnotifyflags*, *setnotifycmdline*, *setminretrydelay*, *setcustomheaders*, *resume* ) by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_exec Processes.parent_process_path Processes.process Processes.process_hash Processes.process_id Processes.process_name Processes.process_path Processes.user\
| rename Processes.* AS *\
| eval prompt = process\
| eval whiteleafuc = "WLUC32"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL034 - Credential Dumping Detection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1003.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL034 - Credential Dumping Detection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 34 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=cmd.exe OR Processes.original_file_name=Cmd.Exe) (Processes.process=*\\system32\\config\\sam* OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system* OR Processes.process=*\\windows\\ntds\\ntds.dit* OR Processes.process=*mklink* OR  Processes.process=*HarddiskVolumeShadowCopy*) by Processes.action Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_path Processes.process Processes.process_name Processes.process_path Processes.user \
\
| rename Processes.* AS *\
| eval prompt = process\
| eval whiteleafuc = "WLUC34"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL033 - AzureHound File and Command Line Detection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1069.001","T1069.002","T1087.001","T1087.002","T1482"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL033 - AzureHound File and Command Line Detection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 33 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime \
  from datamodel=Endpoint.Processes \
  where Processes.process IN ("*invoke-azurehound*") \
  by Processes.action Processes.dest Processes.original_file_name Processes.parent_process \
     Processes.parent_process_name \
     Processes.parent_process_path Processes.process \
     Processes.process_id Processes.process_name \
     Processes.process_path Processes.user \
| rename Processes.* AS * \
| append [\
| tstats count min(_time) as firstTime max(_time) as lastTime \
  from datamodel=Endpoint.Filesystem \
  where Filesystem.file_name IN ("*-azurecollection.zip", "*-azprivroleadminrights.json", "*-azglobaladminrights.json", "*-azcloudappadmins.json", "*-azapplicationadmins.json") \
  by Filesystem.action Filesystem.dest Filesystem.file_access_time Filesystem.file_create_time \
     Filesystem.file_modify_time Filesystem.file_name Filesystem.file_path \
     Filesystem.file_acl Filesystem.file_size \
     Filesystem.user \
| rename Filesystem.* AS * ]\
| eval prompt = case(isnotnull(process), process, isnotnull(file_name), file_name, 1=1, "whiteleaf ignore")\
| eval whiteleafuc = "WLUC33"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL007 - Process Executed from Suspicious File Path - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1543"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL007 - Process Executed from Suspicious File Path
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 7 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Endpoint.Processes where Processes.process_path=*  by Processes.process_path Processes.dest Processes.user \
| `drop_dm_object_name(Processes)`\
| lookup common_paths_for_processes.csv process_path OUTPUT is_known\
| where NOT is_known = 1\
| eval whiteleafuc="WLUC7"\
| eval prompt = process_path\
| whiteleafai \
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL008 - Lookalike Domains in Email - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1583"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL008 - Lookalike Domains in Email
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 8 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Email.All_Email where All_Email.src_user_domain=* All_Email.recipient_domain=* by All_Email.recipient All_Email.src_user All_Email.subject All_Email.src_user_domain All_Email.recipient_domain \
| `drop_dm_object_name(All_Email)` \
| lookup top_1000_email_domains.csv domain AS src_user_domain OUTPUT is_known AS src_domain_known \
| lookup top_1000_email_domains.csv domain AS recipient_domain OUTPUT is_known AS recipient_domain_known \
| where recipient_domain_known = 0 AND src_domain_known = 0 \
| eval whiteleafuc="WLUC8"\
| eval prompt = src_user_domain.">".recipient_domain\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=recipient param.risk_object_type=user

[Threat - WL009 - Lookalike Domains in Web - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1583"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL009 - Lookalike Domains in Web
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 9 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count from datamodel=Web where Web.url_domain=* by Web.user Web.dest Web.action \
| `drop_dm_object_name(Web)` \
| lookup top_1000_domains.csv domain AS url_domain OUTPUT is_known AS url_domain_known \
| where url_domain_known = 0\
| eval whiteleafuc="WLUC9"\
| eval prompt = url_domain\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL013 - LOLBAS Network Traffic - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1105","T1567","T1218"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL013 - LOLBAS Network Traffic
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 13 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic.All_Traffic where All_Traffic.app=* by All_Traffic.app,All_Traffic.src,All_Traffic.src_ip,All_Traffic.user,All_Traffic.dest,All_Traffic.dest_ip \
| rename All_Traffic.* AS *\
| lookup top_1000_network_traffic_apps.csv app OUTPUT is_known\
| where NOT is_known=1\
| eval prompt=app\
| eval whiteleafuc="WLUC13"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL030 - Rare Executables Detection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1204"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL030 - Rare Executables Detection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 30 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats dc(Processes.dest) as dc_dest values(Processes.dest) as dest values(Processes.user) as user min(_time) as firstTime max(_time) as lastTime values(Processes.action) as action values(Processes.original_file_name) as original_file_name values(Processes.parent_process) as parent_process values(Processes.parent_process_name) as parent_process_name values(Processes.parent_process_path) as parent_process_path values(Processes.process) as process values(Processes.process_path) as process_path values(Processes.user) as user from datamodel=Endpoint.Processes by Processes.process_name \
| rename Processes.* AS *\
| lookup common_process_names.csv process_name OUTPUT is_common\
| where NOT is_common=1\
| eval prompt=process_name . ">" . "dc_dest"\
| eval whiteleafuc = "WLUC30"\
| whiteleafai\
| mvexpand dest\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system


[Threat - WL029 - Password Spray (Many to One) - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1110.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL029 - Password Spray (Many to One)
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 29 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats max(_time) as lastTime, min(_time) as firstTime, values(Authentication.user_category) as user_category values(Authentication.src_category) as src_category values(Authentication.app) as app count from datamodel=Authentication.Authentication by Authentication.action Authentication.app Authentication.dest Authentication.src Authentication.user \
| rename Authentication.* AS *\
| eval user=case((match(upper(user),"[a-zA-Z0-9]{3}")),upper(user),true(),null), src=upper(src), success=if(action="success",count,0),success_user=if(action="success",user,null),failure=if(action="failure",count,0), failed_user=if(action="failure",user,null) \
| stats count min(firstTime) as firstTime max(lastTime) as lastTime values(app) as app values(success_user) as user values(failed_user) as failed_user dc(success_user) as success_dc dc(failed_user) as failed_dc dc(user) as user_dc ,sum(failure) as failure,sum(success) as success by src\
| eval success_ratio=success/failure\
| where user_dc >= 5 AND success_ratio < .25 AND failed_dc > success_dc \
| eval prompt=user_dc .">" . success_ratio\
| eval whiteleafuc = "WLUC29"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL038 - Password Spray (One to Many) - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1110.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL038 - Password Spray (One to Many)
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 38 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats  max(_time) as lastTime, min(_time) as firstTime, values(Authentication.user_category) as user_category values(Authentication.src_category) as src_category values(Authentication.app) as app count from datamodel=Authentication.Authentication by Authentication.action Authentication.app Authentication.dest Authentication.src Authentication.user \
| rename Authentication.* AS *\
| eval user=case((match(upper(user),"[a-zA-Z0-9]{3}")),upper(user),true(),null), success=if(action="success",count,0), src=upper(src), success_src=if(action="success",src,null), failure=if(action="failure",count,0), failed_src=if(action="failure",src,null) \
| stats count min(firstTime) as firstTime max(lastTime) as lastTime values(app) as app values(success_src) as src values(failed_src) as failed_src dc(success_src) as success_dc dc(failed_src) as failed_dc dc(src) as src_dc, sum(failure) as failure, sum(success) as success by user \
| eval success_ratio=success/failure\
| where src_dc >= 5 AND success_ratio < .25 AND failed_dc > success_dc \
| eval prompt=src_dc .">". success_ratio\
| eval whiteleafuc="WLUC38"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL055 - AWS Spike Detection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1530"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL055 - AWS Spike Detection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats earliest(_time) as firstTime latest(_time) as lastTime count as numberOfApiCalls dc(All_Changes.signature) as uniqueApisCalled values(All_Changes.dest) as bucket_name from datamodel=Change where All_Changes.action=deleted by All_Changes.user All_Changes.dest\
| lookup s3_deletion_baseline arn as All_Changes.user OUTPUT latestCount avgApiCalls stdevApiCalls numDataPoints\
| eval newAvg=avgApiCalls + (latestCount-avgApiCalls)/720, newStdev=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvg)*(latestCount-avgApiCalls))/720))\
| eval isSpike_s3=if((latestCount > newAvg + 3*newStdev) AND numDataPoints > 15, 1, 0)\
| where isSpike_s3=1\
| iplocation All_Changes.dest\
| rename All_Changes.user as user, All_Changes.dest as dest\
| fields user, bucket_name, numberOfApiCalls, uniqueApisCalled, firstTime, lastTime, dest\
| tstats earliest(_time) as blockedFirst latest(_time) as blockedLast count from datamodel=Network_Traffic where Network_Traffic.action=blocked by Network_Traffic.src_ip Network_Traffic.dest_ip\
| where cidrmatch("10.0.0.0/8", src_ip) OR cidrmatch("172.16.0.0/12", src_ip) OR cidrmatch("192.168.0.0/16", src_ip)\
| where NOT cidrmatch("10.0.0.0/8", dest_ip) AND NOT cidrmatch("172.16.0.0/12", dest_ip) AND NOT cidrmatch("192.168.0.0/16", dest_ip)\
| stats count as latestBlocked by src_ip\
| lookup baseline_blocked_outbound_connections src_ip OUTPUT avgBlockedConnections stdevBlockedConnections numDataPoints\
| eval isSpike_net=if((latestBlocked > avgBlockedConnections + 3*stdevBlockedConnections) AND numDataPoints > 5, 1, 0)\
| where isSpike_net=1\
| sendalert risk param.risk_score=latestCount param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=latestBlocked param.risk_object_field=dest param.risk_object_type=dest

[Threat - WL057 - Azure Multi-Account Manipulation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1098","T1078"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL057 - Azure Multi-Account Manipulation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 57 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | search eventtype="wineventlog_security" OR Channel="security" OR source="XmlWinEventLog:Security" OR source="WinEventLog:Security" (EventCode=4724 OR EventCode=4725 OR EventCode=4726) status=success \
 ```get error when trying to save without search command```\
| bucket span=10m _time\
| eval event_type=case(EventCode==4724, "password_reset", EventCode==4725, "account_disabled", EventCode==4726, "account_deleted")\
| stats count as total_events, dc(user) as unique_users, dc(eval(if(event_type=="password_reset", user, null()))) as unique_password_resets, dc(eval(if(event_type=="account_disabled", user, null()))) as unique_account_disables, dc(eval(if(event_type=="account_deleted", user, null()))) as unique_account_deletes, values(user) as user, values(dest) as dest\
  by _time, src_user, SubjectDomainName, TargetDomainName, Logon_ID, signature\
| eval prompt = "Within a 10-minute window " . unique_password_resets . " password resets, " . unique_account_disables . " account disables, and " . unique_account_deletes . " account deletions."\
| eval whiteleafuc = "WLUC57"\
| whiteleafai\
| sendalert risk param.risk_score=unique_users param.risk_object_field=src_user param.risk_object_type=user\
| sendalert risk param.risk_score=total_events param.risk_object_field=dest param.risk_object_type=system

[Threat - WL000 - Whiteleaf Notable Generator - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL000 - Whiteleaf Notable Generator
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_name = Individual Contributing Behaviors
action.notable.param.drilldown_search = | from datamodel:"Risk.All_Risk" | search normalized_risk_object=$normalized_risk_object|s$ risk_object_type=$risk_object_type|s$ | `get_correlations` | rename annotations.mitre_attack.mitre_tactic_id as mitre_tactic_id, annotations.mitre_attack.mitre_tactic as mitre_tactic, annotations.mitre_attack.mitre_technique_id as mitre_technique_id, annotations.mitre_attack.mitre_technique as mitre_technique | noop search_optimization.search_expansion=false
action.notable.param.extract_artifacts = {"asset":["src","dest","dvc","orig_host","_risk_system"],"identity":["src_user","user","_risk_user"]}
action.notable.param.rule_description = Whiteleaf determined that the $risk_object_type$ ($risk_object$) demonstrated behavioral patterns of a threat
action.notable.param.rule_title = Whiteleaf Detected Threat: $risk_object_type$=$risk_object$
action.notable.param.security_domain = threat
action.notable.param.severity = high
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = source_count,mitre_tactic_id_count,mitre_technique_id_count,normalized_risk_object,risk_object_type
alert.suppress.period = 21600s
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
disabled = 1
dispatch.earliest_time = -1450m@m
dispatch.latest_time = -10m@m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats `summariesonly` mode(All_Risk.risk_object) as risk_object, sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count,values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count, values(All_Risk.risk_object) as all_risk_objects, values(All_Risk.cim_entity_zone) as cim_entity_zone from datamodel=Risk.All_Risk by All_Risk.normalized_risk_object,All_Risk.risk_object_type \
| rename All_Risk.* AS *\
| eval "annotations.mitre_attack"='annotations.mitre_attack.mitre_technique_id'\
| eval whiteleafuc="WLUC0"\
| eval detections=mvjoin(source, " & ")\
| eval prompt = detections\
| whiteleafai\
| where risk_score = "Yes"

[Threat - WL056 - Abnormal Cloud Instance API Calls - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078.004"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL056 - Abnormal Cloud Instance API Calls
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 56 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count as api_calls values(All_Changes.command) as command, values(All_Changes.object_id) as api_objects, values(All_Changes.object_category) as category from datamodel=Change where All_Changes.status=success by All_Changes.user _time span=1h \
| eval HourOfDay=strftime(_time, "%H"), HourOfDay=floor(HourOfDay/4)*4, DayOfWeek=strftime(_time, "%w"), isWeekend=if(DayOfWeek>=1 AND DayOfWeek<=5, 0, 1)\
\
```Need lookup tables to establish basis of normal activity```\
```NHS Review```\
| lookup cloud_excessive_api_calls_v1 HourOfDay isWeekend OUTPUT cardinality expected_upper_threshold_api\
| lookup cloud_excessive_instances_destroyed_v1 HourOfDay isWeekend OUTPUT expected_upper_threshold_destroyed\
| lookup cloud_excessive_instances_created_v1 HourOfDay isWeekend OUTPUT expected_upper_threshold_created\
| lookup cloud_excessive_security_group_api_calls_v1 HourOfDay isWeekend OUTPUT expected_upper_threshold_fw\
| eval \
  distance_api_calls = api_calls - expected_upper_threshold_api,\
  distance_instances_destroyed = if(category=="instance" AND command=="TerminateInstances", api_calls - expected_upper_threshold_destroyed, null()),\
  distance_instances_created = if(category=="instance" AND command=="RunInstances", api_calls - expected_upper_threshold_created, null()),\
  distance_firewall_calls = if(category=="firewall", api_calls - expected_upper_threshold_fw, null())\
| eval \
  raw_api_calls = api_calls,\
  raw_destroyed = if(isnotnull(distance_instances_destroyed), api_calls, null()),\
  raw_created = if(isnotnull(distance_instances_created), api_calls, null()),\
  raw_firewall = if(isnotnull(distance_firewall_calls), api_calls, null())\
| fields _time, user, command, category, api_objects, raw_api_calls, raw_created, raw_destroyed, raw_firewall, expected_upper_threshold_api, expected_upper_threshold_created, expected_upper_threshold_destroyed, expected_upper_threshold_fw, distance_api_calls, distance_instances_created, distance_instances_destroyed, distance_firewall_calls\
| eval prompt="Analyze raw API usage and behavior for possible anomalies: api_calls=".raw_api_calls.", created=".raw_created.", destroyed=".raw_destroyed.", firewall=".raw_firewall.", thresholds: api=".expected_upper_threshold_api.", created=".expected_upper_threshold_created.", destroyed=".expected_upper_threshold_destroyed.", fw=".expected_upper_threshold_fw\
| eval whiteleafuc = "WLUC56"\
| whiteleafai\
| sendalert risk param.risk_score=raw_api_calls param.risk_object_field=user param.risk_object_type=user

[Threat - WL039 - Cloudtrail Manipulation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1562.008"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL039 - Cloudtrail Manipulation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 39 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` (sourcetype=aws:cloudtrail OR sourcetype=aws:asl)\
(eventName IN ("UpdateTrail", "StopLogging") OR  api.operation IN ("UpdateTrail", "StopLogging")) AND userAgent != "console.amazonaws.com" AND errorCode = "success"\
| eval user=coalesce(user_name, userIdentity.userName, actor.user.uid)\
| eval action=coalesce(eventName, api.operation)\
| eval affected_host=coalesce(eventSource, api.service.name)\
| eval user_agent=coalesce(user_agent, http_request.user_agent)\
| eval src=coalesce(src, src_endpoint.ip)\
| eval is_update_trail=if(action="UpdateTrail", 1, 0)\
| eval is_stop_logging=if(action="StopLogging", 1, 0)\
| where is_update_trail=1 OR is_stop_logging=1\
| eval prompt=case(\
    is_update_trail=1, "CloudTrail configuration modified via UpdateTrail",\
    is_stop_logging=1, "CloudTrail logging disabled via StopLogging")\
| eval whiteleafuc = "WLUC39"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=affected_host param.risk_object_type=system

[Threat - WL035 - AWS Login Elements Creation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078.004","T1136.003","T1201"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL035 - AWS Login Elements Creation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail (eventSource="iam.amazonaws.com" AND eventName IN ("CreatePolicyVersion", "SetDefaultPolicyVersion","CreateAccessKey", "UpdateAccountPasswordPolicy", "GetAccountPasswordPolicy", "DeleteAccountPasswordPolicy","CreateLoginProfile")) OR (eventName="ConsoleLogin")\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval is_console_login=if(eventName="ConsoleLogin", 1, 0)\
| eval is_dangerous_policy=if(eventName="CreatePolicyVersion" AND like(requestParameters.policyDocument, "%Action\":\"*%"), 1, 0)\
| eval is_key_mismatch=if(eventName="CreateAccessKey" AND userIdentity.userName != requestParameters.userName, 1, 0)\
| eval is_login_profile_created=if(eventName="CreateLoginProfile", 1, 0)\
| eval is_password_policy_action=if(eventName IN ("UpdateAccountPasswordPolicy", "GetAccountPasswordPolicy", "DeleteAccountPasswordPolicy"), 1, 0)\
| eval is_set_default_policy=if(eventName="SetDefaultPolicyVersion", 1, 0)\
| eval prompt=case(\
    is_dangerous_policy=1, "IAM Policy Created With Action *",\
    is_key_mismatch=1, "CreateAccessKey for Different User",\
    is_console_login=1 AND is_login_profile_created=1, "New Login Profile Logged Into Console",\
    is_password_policy_action=1, "Password Policy Access or Change",\
    is_set_default_policy=1, "Set Default Policy Version")\
| where is_dangerous_policy=1 OR is_key_mismatch=1 OR (is_console_login=1 AND is_login_profile_created=1) OR is_password_policy_action=1 OR is_set_default_policy=1\
| eval whiteleafuc = "WLUC35"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL036 - AWS ASL Credential Manipulation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1110.001","T1586.003","T1110"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL036 - AWS ASL Credential Manipulation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 36 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` (sourcetype=aws:asl OR sourcetype=aws:cloudtrail)\
(eventName="GetPasswordData" OR api.operation="GetPasswordData" OR eventName="ModifyDBInstance" OR api.operation="ModifyDBInstance" OR api.operation="ModifyDBCluster")\
OR (eventSource="rds.amazonaws.com" AND like(requestParameters.masterUserPassword, "*"))\
OR (sourcetype=aws:asl AND like(api.request.data, "%masterUserPassword%"))\
| eval user=coalesce(user_name, userIdentity.userName, actor.user.uid)\
| eval dest=coalesce(eventSource, api.service.name)\
``` fix dest```\
| eval action=coalesce(eventName, api.operation)\
| eval user_agent=coalesce(user_agent, http_request.user_agent)\
| eval src=coalesce(src, src_endpoint.ip)\
| eval is_password_fetch=if(action="GetPasswordData", 1, 0)\
| eval is_db_password_change=if((action="ModifyDBInstance" OR action="ModifyDBCluster") AND (like(requestParameters.masterUserPassword, "*") OR like(api.request.data, "%masterUserPassword%")), 1, 0)\
| where is_password_fetch=1 OR is_db_password_change=1\
| eval prompt=case(\
    is_password_fetch=1 AND sourcetype="aws:asl", "Retrieved EC2 instance password via ASL",\
    is_password_fetch=1 AND sourcetype="aws:cloudtrail", "Retrieved EC2 instance password via CloudTrail",\
    is_db_password_change=1 AND sourcetype="aws:asl", "Modified DB password via ASL",\
    is_db_password_change=1 AND sourcetype="aws:cloudtrail", "Modified DB password via CloudTrail")\
| eval whiteleafuc = "WLUC36"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL037 - AWS ASL Log Deletion - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1562.008"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL037 - AWS ASL Log Deletion
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 37 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` (sourcetype=aws:asl OR sourcetype=aws:cloudtrail)\
((action=DeleteTrail OR eventName="DeleteTrail") OR (action=DeleteLogGroup OR eventName="DeleteLogGroup") OR\
eventName IN ("DeleteLogStream", "DeleteDetector", "DeleteIPSet", "DeleteWebACL", "DeleteRule", "DeleteRuleGroup", "DeleteLoggingConfiguration", "DeleteAlarms")) AND userAgent != "console.amazonaws.com" AND errorCode = "success"\
| eval user=coalesce(user_name, userIdentity.userName, actor.user.uid)\
| eval dest=coalesce(eventSource, api.service.name)\
```fix dest```\
| eval action=coalesce(eventName, api.operation)\
| eval user_agent=coalesce(user_agent, http_request.user_agent)\
| eval src=coalesce(src, src_endpoint.ip)\
| eval is_delete_trail=if(action="DeleteTrail", 1, 0)\
| eval is_delete_log_group=if(action="DeleteLogGroup", 1, 0)\
| eval is_detection_evade=if(action IN ("DeleteLogStream","DeleteDetector","DeleteIPSet","DeleteWebACL","DeleteRule","DeleteRuleGroup","DeleteLoggingConfiguration","DeleteAlarms"), 1, 0)\
| where is_delete_trail=1 OR is_delete_log_group=1 OR is_detection_evade=1\
| eval prompt=case(\
    is_delete_trail=1, "CloudTrail trail deleted – attempt to disable audit logging",\
    is_delete_log_group=1, "CloudWatch log group deleted – potential log destruction",\
    is_detection_evade=1, "Security or detection config deleted – potential evasion attempt")\
| eval whiteleafuc = "WLUC37"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL040 - AWS Abnormal ECR Container Upload - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1204.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL040 - AWS Abnormal ECR Container Upload
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 40 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:asl api.operation=PutImage\
| eval hour=strftime(time/pow(10,3), "%H"), weekday=strftime(time/pow(10,3), "%A")\
| eval is_off_hours=if(hour >= 20 OR hour < 8 OR weekday IN ("Saturday", "Sunday"), 1, 0)\
| eval is_unauthorized=if(NOT `aws_ecr_users_asl`, 1, 0)\
| where is_off_hours=1 OR is_unauthorized=1\
| eval user=coalesce(actor.user.uid, "unknown_user")\
| eval affected_host=coalesce(api.service.name, "unknown_service")\
| eval action=api.operation, user_agent=http_request.user_agent, src=src_endpoint.ip\
| eval prompt=case(\
    is_unauthorized=1 AND is_off_hours=1, "ECR image upload by unauthorized user during off-hours",\
    is_unauthorized=1, "ECR image upload by unauthorized user",\
    is_off_hours=1, "ECR image upload during off-hours")\
| eval whiteleafuc = "WLUC40"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=affected_host param.risk_object_type=system

[Threat - WL041 - AWS Privilege Escalation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1580","T1110"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL041 - AWS Privilege Escalation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 41 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` (sourcetype=aws:cloudtrail OR sourcetype=aws:asl) ((errorCode="MalformedPolicyDocumentException" AND status="failure" AND userAgent!="*.amazonaws.com") OR (api.operation="AssumeRole" "api.response.error"=AccessDenied) OR (api.response.error=AccessDenied OR api.response.error=OperationNotPermittedException OR api.response.error=*Unauthorized* actor.user.type=IAMUser)\
| eval user=coalesce(user_name, userIdentity.userName, actor.user.uid)\
| eval affected_host=coalesce(eventSource, api.service.name)\
| eval action=coalesce(eventName, api.operation)\
| eval user_agent=coalesce(user_agent, http_request.user_agent)\
| eval src=coalesce(src, src_endpoint.ip)\
| stats count as failures min(_time) as firstTime max(_time) as lastTime dc(action) as distinct_actions dc(affected_host) as distinct_services values(action) as actions values(affected_host) as services by user affected_host user_agent src\
| eval whiteleafuc = "WLUC41"\
| eval prompt = failures\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=affected_host param.risk_object_type=system

[Threat - WL042 - AWS IAM Log Deletion - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1069.003","T1098"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL042 - AWS IAM Log Deletion
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 42 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:asl api.operation IN ("DeleteGroup", "DeletePolicy")\
| eval is_group_delete_success = if(api.operation=="DeleteGroup" AND status=="Success", 1, 0)\
| eval is_group_delete_failed = if(api.operation=="DeleteGroup" AND status=="Failure" AND http_request.user_agent!="*.amazonaws.com", 1, 0)\
| eval is_policy_delete = if(api.operation=="DeletePolicy", 1, 0)\
| where is_group_delete_success=1 OR is_group_delete_failed=1 OR is_policy_delete=1\
| eval user=coalesce(actor.user.uid, "unknown_user")\
| eval affected_host=coalesce(api.service.name, "unknown_service")\
| eval action=api.operation\
| eval user_agent=http_request.user_agent\
| eval src=src_endpoint.ip\
| eval prompt=case(\
    is_group_delete_success=1, "IAM group successfully deleted",\
    is_group_delete_failed=1, "Failed IAM group deletion attempt from non-AWS user agent",\
    is_policy_delete=1, "IAM policy deletion executed")\
| eval whiteleafuc = "WLUC42"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=affected_host param.risk_object_type=system

[Threat - WL043 - AWS ACL Creation/Deletion - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1562.007"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL043 - AWS ACL Creation/Deletion
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 43 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` (sourcetype=aws:cloudtrail OR sourcetype=aws:asl) ((status=Success AND (api.operation=DeleteNetworkAclEntry OR api.operation=CreateNetworkAclEntry OR api.operation=ReplaceNetworkAclEntry)) OR ((eventName=CreateNetworkAclEntry OR eventName=ReplaceNetworkAclEntry requestParameters.ruleAction=allow requestParameters.egress=false requestParameters.aclProtocol=-1) OR (eventName=DeleteNetworkAclEntry requestParameters.egress=false )))\
| eval user=coalesce(user_name, userIdentity.userName, actor.user.uid)\
| eval action=coalesce(eventName, api.operation)\
| eval affected_host=coalesce(eventSource, api.service.name)\
| eval user_agent=coalesce(user_agent, http_request.user_agent)\
| eval src=coalesce(src, src_endpoint.ip)\
| eval acl_id=coalesce(requestParameters.networkAclId, networkAclId)\
| eval egress_flag=coalesce(requestParameters.egress, egress)\
| eval rule_action=coalesce(requestParameters.ruleAction, ruleAction)\
| eval acl_protocol=coalesce(requestParameters.aclProtocol, aclProtocol)\
| eval cidr_block=coalesce(requestParameters.cidrBlock, cidrBlock)\
| eval port_from=coalesce(requestParameters.portRange.from, 0)\
| eval port_to=coalesce(requestParameters.portRange.to, 0)\
| eval port_range=port_to - port_from\
| eval is_inbound_delete=if(action="DeleteNetworkAclEntry" AND egress_flag="false", 1, 0)\
| eval is_inbound_permissive_all=if((action IN ("CreateNetworkAclEntry", "ReplaceNetworkAclEntry") AND rule_action="allow" AND egress_flag="false" AND acl_protocol="-1" AND cidr_block="0.0.0.0/0"), 1, 0)\
| eval is_high_port_range=if((port_range > 1024 AND egress_flag="false" AND rule_action="allow"), 1, 0)\
| where is_inbound_delete=1 OR is_inbound_permissive_all=1 OR is_high_port_range=1\
| eval prompt=case(\
    is_inbound_delete=1, "AWS Inbound Network ACL rule deleted",\
    is_inbound_permissive_all=1, "Overly permissive inbound ACL rule created (all traffic allowed)",\
    is_high_port_range=1, "New AWS Inbound rule allows traffic to ".port_range." ports from a single source")\
| eval whiteleafuc = "WLUC43"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=affected_host param.risk_object_type=system

[Threat - WL044 - AWS Bedrock Deletion - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1562.008","T1485"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL044 - AWS Bedrock Deletion
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 44 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail eventSource="bedrock.amazonaws.com" \
eventName IN ("DeleteModelInvocationLoggingConfiguration", "DeleteKnowledgeBase", "DeleteGuardrail")\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval config_deleted=case(\
    eventName=="DeleteModelInvocationLoggingConfiguration", "Model Invocation Logging Configuration",\
    eventName=="DeleteKnowledgeBase", "Knowledge Base",\
    eventName=="DeleteGuardrail", "Guardrail")\
| eval config_id=coalesce(requestParameters.knowledgeBaseId, requestParameters.guardrailIdentifier, "N/A")\
| eval prompt="This Bedrock configuration has been deleted: ".config_deleted\
| eval whiteleafuc = "WLUC44"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL045 - AWS ECR Container Scanning - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1204.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL045 - AWS ECR Container Scanning
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail eventSource="ecr.amazonaws.com" eventName="DescribeImageScanFindings"\
| spath path=responseElements.imageScanFindings.findings{} output=findings\
| mvexpand findings\
| spath input=findings\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval finding_name=coalesce(name, "unknown"), finding_description=coalesce(description, "No description"), imageDigest=requestParameters.imageId.imageDigest, repository=requestParameters.repositoryName\
| eval severity=coalesce(severity, "UNKNOWN")\
| eval prompt="ECR image scan findings reported with severities: ".mvjoin(severities, ", ")\
| eval whiteleafuc="WLUC45"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL046 - AWS ECR Abnormal Upload - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1204.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL046 - AWS ECR Abnormal Upload
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 46 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail eventSource="ecr.amazonaws.com" eventName="PutImage"\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval image=coalesce(repositoryName, repository)\
| where (date_hour>=20 OR date_hour<8 OR date_wday=saturday OR date_wday=sunday) OR NOT `aws_ecr_users` \
| eval event_hour=strftime(_time, "%H")\
| eval event_day=strftime(_time, "%A")\
| eval prompt="ECR image uploaded by user=".user." at hour=".event_hour." on day=".event_day." into image repository=".image\
| eval whiteleafuc="WLUC46"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL066 - Azure Domain Addition - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL066 - Azure Domain Addition
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 7 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL067 - Azure SP Creation - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL067 - Azure SP Creation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 8 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL068 - Azure MFA Requests - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL068 - Azure MFA Requests
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 9 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL069 - Azure Authentication Spike  - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL069 - Azure Authentication Spike
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL070 - Azure Abnormal Failed Authentication - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL070 - Azure Abnormal Failed Authentication
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 11 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL071 - Azure Role Assigning - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL071 - Azure Role Assigning
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 12 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ```blah```

[Threat - WL047 - AWS Exfiltration - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1537","T1119"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL047 - AWS Exfiltration
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 47 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=aws:cloudtrail \
(eventName IN ("CreateSnapshot", "DescribeSnapshotAttribute", "ModifySnapshotAttribute", "DeleteSnapshot", "CreateTask", "PutBucketReplication", "JobCreated", "GetObject")) AND src_ip != "guardduty.amazonaws.com"\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval dest=coalesce(eventSource, requestParameters.bucketName)\
| eval bucket_name=requestParameters.ReplicationConfiguration.Rule.Destination.Bucket\
| eval snapshot_event=if(eventName IN ("CreateSnapshot", "DescribeSnapshotAttribute", "ModifySnapshotAttribute", "DeleteSnapshot"), 1, 0)\
| eval datasync_event=if(eventName="CreateTask" AND eventSource="datasync.amazonaws.com", 1, 0)\
| eval replication_event=if(eventName="PutBucketReplication", 1, 0)\
| eval job_event=if(eventName="JobCreated", 1, 0)\
| eval getobject_event=if(eventName="GetObject", 1, 0)\
| eval snapshot_count=if(snapshot_event=1, 1, 0)\
| eval datasync_count=if(datasync_event=1, 1, 0)\
| eval replication_count=if(replication_event=1, 1, 0)\
| eval job_count=if(job_event=1, 1, 0)\
| eval getobject_count=if(getobject_event=1, 1, 0)\
| stats \
    sum(snapshot_count) as snapshot_count \
    sum(datasync_count) as datasync_count \
    sum(replication_count) as replication_count \
    sum(job_count) as job_count \
    sum(getobject_count) as getobject_count \
    min(_time) as firstTime \
    max(_time) as lastTime \
    values(signature) as apis \
    values(user) as user \
    values(user_agent) as user_agent \
    values(dest) as dest \
    values(src) as src \
    values(bucket_name) as bucket_name\
\
| eval prompt="Snapshot API count=".snapshot_count.\
      ", DataSync tasks=".datasync_count.\
      ", Replication rules=".replication_count.\
      ", Jobs created=".job_count.\
      ", Object accesses=".getobject_count\
| eval whiteleafuc="WLUC47"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WLUC047 - AWS Exfiltration - Rule]
search = `whiteleaf_aws` sourcetype=aws:cloudtrail \
(eventName = PutBucketReplication eventSource = s3.amazonaws.com) OR (eventName = JobCreated) OR (eventName = CreateTask eventSource="datasync.amazonaws.com" ) OR (eventName IN ("CreateSnapshot", "DescribeSnapshotAttribute", "ModifySnapshotAttribute", "DeleteSnapshot") src_ip !="guardduty.amazonaws.com")\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval dest=coalesce(eventSource, requestParameters.bucketName)\
| eval bucket_name=requestParameters.ReplicationConfiguration.Rule.Destination.Bucket\
| eval snapshot_event=if(eventName IN ("CreateSnapshot", "DescribeSnapshotAttribute", "ModifySnapshotAttribute", "DeleteSnapshot"), 1, 0)\
| eval datasync_event=if(eventName="CreateTask" AND eventSource="datasync.amazonaws.com", 1, 0)\
| eval replication_event=if(eventName="PutBucketReplication", 1, 0)\
| eval job_event=if(eventName="JobCreated", 1, 0)\
| stats\
    sum(snapshot_event) as snapshot_count \
    sum(datasync_event) as datasync_count \
    sum(replication_event) as replication_count \
    sum(job_event) as job_count \
    min(_time) as firstTime \
    max(_time) as lastTime \
    values(signature) as apis\
    values(dest) as dest \
    values(src) as src \
    values(bucket_name) as bucket_name by user\
\
| eval prompt="Snapshot API count=".snapshot_count.\
      ", DataSync tasks=".datasync_count.\
      ", Replication rules=".replication_count.\
      ", Jobs created=".job_count\
| eval whiteleafuc="WLUC47"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=dest param.risk_object_type=system

[Threat - WL048 - AWS Failed Authentication - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1580","T1110.003","T1110.004","T1201"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL048 - AWS Failed Authentication
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 86400s
alert.track = 1
counttype = number of events
cron_schedule = 48 * * * *
disabled = 1
dispatch.earliest_time = -1450m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail ((errorCode="AccessDenied" AND user_type=IAMUser AND userAgent!=*.amazonaws.com) OR (eventName=ConsoleLogin AND action=failure))\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval is_access_denied=if(errorCode="AccessDenied" AND user_type="IAMUser" AND NOT like(userAgent, "%.amazonaws.com"), 1, 0)\
| eval is_console_login_fail=if(eventName="ConsoleLogin" AND action="failure", 1, 0)\
| eval access_denied_count=if(is_access_denied=1, 1, 0)\
| eval console_login_fail_count=if(is_console_login_fail=1, 1, 0)\
| eval count=access_denied_count + console_login_fail_count\
| bin span=1h _time\
| stats sum(count) as count, min(_time) as firstTime, max(_time) as lastTime values(dest) as dest values(src) as src by user _time\
| eventstats median(count) as median p25(count) as p25 p75(count) as p75 by _time\
| eval IQR=(p75-p25)\
| eval sensitivity = 2\
| eval upperBound=(median+IQR*sensitivity)\
| eval isOutlier=if(count > upperBound, 1, 0)\
| where (isOutlier=1)\
| eval prompt=count\
| eval whiteleafuc="WLUC48"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL049 - AWS MFA Failure - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1586.003","T1621","T1556.006"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL049 - AWS MFA Failure
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 49 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail (eventName= ConsoleLogin "additionalEventData.MFAUsed"=Yes errorMessage="Failed authentication") OR eventName= DeleteVirtualMFADevice OR eventName=DeactivateMFADevice\
| eval user=coalesce(user_name, userIdentity.userName)\
| eval is_mfa_prompt=if(eventName="ConsoleLogin" AND 'additionalEventData.MFAUsed'="Yes" AND errorMessage="Failed authentication", 1, 0)\
| eval is_mfa_deactivation=if(eventName=="DeleteVirtualMFADevice" OR eventName=="DeactivateMFADevice", 1, 0)\
| eval mfa_prompt_count=if(is_mfa_prompt=1, 1, 0)\
| eval mfa_deactivation_count=if(is_mfa_deactivation=1, 1, 0)\
| stats sum(mfa_prompt_count) as total_mfa_prompts, sum(mfa_deactivation_count) as total_mfa_deactivations min(_time) as firstTime max(_time) as lastTime values(user_agent) as user_agent values(src) as src values(dest) as dest by user\
| eval prompt="mfa_prompts=".total_mfa_prompts.", mfa_deactivations=".total_mfa_deactivations\
| eval whiteleafuc="WLUC49"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Whiteleaf Automated Test v1]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk_object = domain_name
action.risk.param._risk_object_type = system
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 * * * *
disabled = 1
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index="botsv3" OR index="botsv2" sourcetype="aws:cloudwatchlogs" earliest=-10y\
| rex field=_raw "Z149R7NEBZTKPN (?P<domain_name>.+)\sA"\
| head 30\
| eval prompt=domain_name\
| eval whiteleafuc="WLUC1"\
| table domain_name prompt  whiteleafuc\
| whiteleafai

[Threat - WL058 - Azure 0365 Privilege Escalation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1098.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL058 - Azure 0365 Privilege Escalation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 58 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count as event_count earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Authentication where (sourcetype=o365:management:activity AND Workload="AzureActiveDirectory" AND (Operation="Add member to role." OR Operation="Add eligible member to role.")) by ObjectId, 'Actor{}.ID', 'ModifiedProperties{}.NewValue', 'ModifiedProperties{}.Name', ResultStatus, 'Target{}.ID', vendor_account, vendor_product, dest\
```the case function determines the identity of the source actor (who performed the action). It checks the last value of the multivalue field Actor{}.ID to determine if it’s a human user or a service principal```| eval user=ObjectId, src_user=case(match(mvindex('Actor{}.ID',-1),"User"),mvindex('Actor{}.ID',0),match(mvindex('Actor{}.ID',-1),"ServicePrincipal"),mvindex('Actor{}.ID',3),true(),mvindex('Actor{}.ID',0)), object_name=mvindex('ModifiedProperties{}.NewValue', mvfind('ModifiedProperties{}.Name',"Role\\.DisplayName")), object_id=mvindex('ModifiedProperties{}.NewValue', mvfind('ModifiedProperties{}.Name',"Role\\.TemplateId")), signature=Operation, result=ResultStatus, category=mvindex('Target{}.ID',2)\
```lookup table assumes that you can identify privileged roles based on the name```\
| lookup privileged_azure_ad_roles.csv azuretemplateid as object_id OUTPUT isprvilegedadrole\
| where isprvilegedadrole="TRUE"\
| eval role_assignment_type=if(category="User","UserRoleAssignment","NonUserRoleAssignment")\
| search sourcetype=o365:management:activity Operation="Add app role assignment to service principal." "Actor{}.ID"=ServicePrincipal ResultStatus=Success\
| spath path=ModifiedProperties{} output=targetResources\
| eval src="NA"\
| stats min(_time) as _time values(eval(mvfilter(match(targetResources, "AppRole.Value")))) as appRole, values(eval(mvfilter(match(targetResources, "ServicePrincipal.DisplayName")))) as targetServicePrincipal values(object) as targetAppContext values(user_agent) as user_agent values(user) as servicePrincipal values(UserId) as servicePrincipalId by Operation InterSystemsId tenant_id user dest src vendor_account vendor_product signature\
| spath input=appRole path=NewValue output=appRole\
| spath input=targetServicePrincipal path=NewValue output=targetServicePrincipal\
| where servicePrincipal=targetServicePrincipal\
| fillnull\
| stats earliest(_time) as svcFirstTime latest(_time) as svcLastTime by servicePrincipal servicePrincipalId appRole targetAppContext user_agent tenant_id InterSystemsId user dest src vendor_account vendor_product signature\
| eval whiteleafuc="WLUC58"\
```NS, get rid of fields you don't feel are necessary to send to whiteleaf```\
| eval prompt="Evaluate Azure AD role modifications and service principal privilege assignments: user=".user.", src_user=".src_user.", object_id=".object_id.", object_name=".object_name.", category=".category.", servicePrincipal=".servicePrincipal.", appRole=".appRole.", targetAppContext=".targetAppContext.", timestamps=".firstTime." to ".lastTime\
| whiteleafai\
| sendalert risk param.risk_score=event_count param.risk_object_field=user param.risk_object_type=user \
| sendalert risk param.risk_score=event_count param.risk_object_field=servicePrincipal param.risk_object_type=system

[Threat - WL050 - Authentication Attempts from One IP to Multiple Users - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1110.003","T1110.004","T1586.003","T1586","T1535"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL050 - Authentication Attempts from One IP to Multiple Users
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 50 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:cloudtrail eventName="ConsoleLogin" action="failure"\
| rename user_name as user, userAgent as user_agent, sourceIPAddress as src, eventSource as dest, userIdentity.accountId as vendor_account, awsRegion as vendor_region\
|  bin span=5m _time\
| eventstats  dc(user) AS unique_accounts by _time, src, signature, dest\
| eventstats dc(_raw) AS distinct_attempts values(user_name) as tried_accounts values(action) as action values(dest) as dest by _time, src \
| eventstats avg(distinct_attempts) as avg_attempts , stdev(distinct_attempts) as ip_std by _time \
| eval upperBound=(avg_attempts+ip_std*3) \
| eval  isOutlier=if(distinct_attempts > 10 and distinct_attempts >= upperBound, 1, 0) \
| eventstats  dc(src) as distinct_ip_count values(src) as src values(user_agent) as user_agent values(dest) as dest by _time, user, signature \
| eval is_suspicious=case(\
    unique_accounts>1, "true",\
    distinct_ip_count>1, "true",\
    isOutlier=1, "true", 1=1, "false")\
| where is_suspicious="true"\
| eval prompt=case(\
    unique_accounts>1, "Distinct count of accounts failing authentication from a single IP=".unique_accounts.,\
    distinct_ip_count>1, "Distinct IPs attempting authentication count=".distinct_ip_count.,\
    isOutlier=1, "Unusual number of authenitcation attempts from a single IP (3 standard deviations above the company-wide average)=.distinct_attempts.")\
| eval whiteleafuc="WLUC50"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL052 - AWS Cloud Provisioning - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL052 - AWS Cloud Provisioning
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user,src
alert.suppress.period = 86400s
alert.track = 1
counttype = number of events
cron_schedule = 52 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats earliest(_time) as firstTime, latest(_time) as lastTime, values(All_Changes.object_id) as object_id, values(All_Changes.object) as object from datamodel=Change where (All_Changes.action=started OR All_Changes.action=created) AND All_Change.status=success by All_Changes.src, All_Changes.user, All_Changes.command \
| rename All_Changes.* AS *\
| iplocation src \
| lookup previously_seen_cloud_provisioning_activity_sources.csv src OUTPUT firstTimeSeen as srcfirstTimeSeen\
| lookup previously_seen_cloud_provisioning_activity_sources.csv Region OUTPUT firstTimeSeen as regionfirstTimeSeen\
| lookup previously_seen_cloud_provisioning_activity_sources.csv Country OUTPUT firstTimeSeen as countryfirstTimeSeen\
| lookup previously_seen_cloud_provisioning_activity_sources.csv City OUTPUT firstTimeSeen as cityfirstTimeSeen\
| eval suspicious_provisioning=case( \
(isnull(firstTimeSeenCountry) OR firstTimeSeenCountry > relative_time(now(), "-24h@h")), "firstCountry",\
(isnull(firstTimeSeenCity) OR firstTimeSeenCity > relative_time(now(), "-24h@h")),"firstCity",\
(isnull(firstTimeSeenRegion) OR firstTimeSeenRegion > relative_time(now(), "-24h@h")), "firstRegion",\
(isnull(firstTimeSeenSrc) OR firstTimeSeenSrc > relative_time(now(), "-24h@h")) , "firstIP")\
| where suspicious_provisioning=*\
| eval prompt=case(suspicious_provisioning="firstCountry","Previously unseen country > ".src,\
suspicious_provisioning="firstRegion","Previously unseen region > ".src,\
suspicious_provisioning="firstCity","Previously unseen city > ".src,\
suspicious_provisioning="firstIP","Previously unseen IP > ".src)\
| eval whiteleafuc="WLUC52" \
| whiteleafai \
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user \
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL051 - AWS Cloud Instance Creation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078.004","T1535"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL051 - AWS Cloud Instance Creation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user
alert.suppress.period = 86400s
alert.track = 1
counttype = number of events
cron_schedule = 51 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats count earliest(_time) as firstTime, latest(_time) as lastTime values(All_Changes.object_id) as object_id values(All_Changes.command) as command values(All_Changes.object) as obj values(All_Changes.Instance_Changes.image_id) as image_id values(All_Changes.Instance_Changes.instance_type) as instance_type values(All_Changes.vendor_region) as vendor_region from datamodel=Change where (All_Changes.action=modified AND All_Changes.change_type=EC2 AND All_Changes.status=success) OR (All_Changes.action=created)\
by All_Changes.user _time\
| rename All_Changes.* AS *\
| lookup previously_seen_cloud_instance_modifications_by_user.csv user OUTPUTNEW firstTimeSeen as modFirstTimeSeen\
| lookup previously_seen_cloud_compute_instance_types.csv instance_type OUTPUTNEW firstTimeSeen as typeFirstTimeSeen\
| lookup previously_seen_cloud_compute_images.csv image_id OUTPUTNEW firstTimeSeen as imgFirstTimeSeen\
| lookup previously_seen_cloud_regions.csv vendor_region OUTPUTNEW firstTimeSeen as regionFirstTimeSeen\
| lookup previously_seen_cloud_compute_creations_by_user.csv user OUTPUTNEW firstTimeSeen as createFirstTimeSeen\
| eval modNew=if(isnull(modFirstTimeSeen) OR modFirstTimeSeen > relative_time(now(), "-24h@h"), 1, 0)\
| eval typeNew=if(isnull(typeFirstTimeSeen) OR typeFirstTimeSeen > relative_time(now(), "-24h@h"), 1, 0)\
| eval imgNew=if(isnull(imgFirstTimeSeen) OR imgFirstTimeSeen > relative_time(now(), "-24h@h"), 1, 0)\
| eval regionNew=if(isnull(regionFirstTimeSeen) OR regionFirstTimeSeen > relative_time(now(), "-24h@h"), 1, 0)\
| eval createNew=if(isnull(createFirstTimeSeen) OR createFirstTimeSeen > relative_time(now(), "-24h@h"), 1, 0)\
| where modNew=1 OR typeNew=1 OR imgNew=1 OR regionNew=1 OR createNew=1\
| eval prompt=case(\
    modNew=1, "Cloud instance modified by previously unseen user; instance type: ".instance_type.,\
    typeNew=1, "Previously unseen instance type created: ".instance_type.,\
    imgNew=1, "Previously unseen image used to create instance with instance type: ".instance_type.,\
    regionNew=1, "Instance created in previously unused region: ".vendor_region.,\
    createNew=1, "Cloud instance created by previously unseen user; instance_type: ".instance_type.)\
| eval whiteleafuc = "WLUC51"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL053 - AWS Console Login - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1535","T1586.003","T1552"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL053 - AWS Console Login
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 53 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats earliest(_time) as firstTime, latest(_time) as lastTime from datamodel=Authentication \
  where Authentication.signature=ConsoleLogin \
  by Authentication.user, Authentication.src \
| rename Authentication.* as * \
| iplocation src \
| rename Region as currentRegion, Country as currentCountry, City as currentCity\
| lookup previously_seen_users_console_logins.csv user OUTPUT firstTime as seenLoginTime\
| lookup previously_seen_login_sources.csv src OUTPUT firstTimeSeen as srcFirstSeen\
| lookup previously_seen_login_regions.csv currentRegion OUTPUT firstTimeSeen as regionFirstSeen\
| lookup previously_seen_login_countries.csv currentCountry OUTPUT firstTimeSeen as countryFirstSeen\
| lookup previously_seen_login_cities.csv currentCity OUTPUT firstTimeSeen as cityFirstSeen\
| eval \
    isNewRegion = if(isnull(regionFirstSeen) OR regionFirstSeen >= relative_time(now(), "-24h@h"), 1, 0),\
    isNewCountry = if(isnull(countryFirstSeen) OR countryFirstSeen >= relative_time(now(), "-24h@h"), 1, 0),\
    isNewCity = if(isnull(cityFirstSeen) OR cityFirstSeen >= relative_time(now(), "-24h@h"), 1, 0),\
    isNewSrc = if(isnull(srcFirstSeen) OR srcFirstSeen >= relative_time(now(), "-24h@h"), 1, 0),\
    isNewUser = if(isnull(seenLoginTime) OR seenLoginTime >= relative_time(now(), "-24h@h"), 1, 0)\
| eval suspicious_login = case(\
    isNewCountry=1, "firstCountry",\
    isNewRegion=1, "firstRegion",\
    isNewCity=1, "firstCity",\
    isNewUser=1, "firstUser",\
    isNewSrc=1, "firstSrc")\
| where isnotnull(suspicious_login)\
| eval prompt=case(\
    suspicious_login="firstCountry", "Previously unseen country login from src= ".src.,\
    suspicious_login="firstRegion",  "Previously unseen region login from src= ".src.,\
    suspicious_login="firstCity",    "Previously unseen city login from src= ".src.,\
    suspicious_login="firstUser",    "Previously unseen user login from src= ".src.,\
    suspicious_login="firstSrc",    "Previously unseen login from src= ".src.)\
| eval whiteleafuc="WLUC53"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL059 - Azure 0365 Compliance Content - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1114.002"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL059 - Azure 0365 Compliance Content
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 59 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=o365:management:activity Workload=SecurityComplianceCenter Operation IN ("SearchExported", "SearchCreated")\
| rename user_id as user \
| fillnull \
| stats \
    count(eval(Operation="SearchCreated")) as searches_initiated,\
    count(eval(Operation="SearchExported")) as searches_exported,\
    min(_time) as firstTime,\
    max(_time) as lastTime,\
    values(signature) as signature,\
    values(dest) as dest,\
    values(user) as user,\
    values(src) as src,\
    values(vendor_account) as vendor_account,\
    values(vendor_product) as vendor_product,\
    values(ExchangeLocations) as exchange_locations,\
    values(Query) as query \
    ```NS, remove stats and prompt fields as you feel necessary```\
| eval whiteleafuc="WLUC59"\
| eval prompt="O365 content search activity: searches_initiated=" . searches_initiated . ", searches_exported=" . searches_exported . ", exchange_locations=" . exchange_locations . ", query=" . query\
| whiteleafai\
| sendalert risk param.risk_score=searches_exported param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=searches_initiated param.risk_object_field=dest param.risk_object_type=system

[Threat - WL060 - Azure 0365 Role Assignment - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1098.002","T1098"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL060 - Azure 0365 Role Assignment
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 1 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=o365:management:activity \
| eval event_type=case(\
    Workload=="AzureActiveDirectory" AND Operation=="Add owner to application.", "AppOwnershipChange",\
    Workload=="Exchange" AND Operation=="New-ManagementRoleAssignment" AND Role=="ApplicationImpersonation", "AppImpersonationRoleAssignment",\
    true(), null())\
| where isnotnull(event_type)\
| eval \
    app_id=if(event_type=="AppOwnershipChange", mvindex('ModifiedProperties{}.NewValue', 0), null()),\
    app_displayName=if(event_type=="AppOwnershipChange", mvindex('ModifiedProperties{}.NewValue', 1), null()),\
    target=if(event_type=="AppImpersonationRoleAssignment", User, app_id),\
    target_user=if(event_type=="AppImpersonationRoleAssignment", User, null())\
| rename user_id as user \
| fillnull \
| stats \
    count as event_count \
    values(user) as user \
    values(src) as src \
    values(dest) as dest \
    values(signature) as signature \
    values(vendor_account) as vendor_account \
    values(vendor_product) as vendor_product \
    values(Operation) as operation \
    values(app_displayName) as app_displayName \
    values(target_user) as target_user by event_type, target\
    \
    ```remove unnecessary stats and prompt fields```\
| eval whiteleafuc="WLUC60"\
| eval prompt="EventType=".event_type." | Target=".target." | AppName=".app_displayName." | Src=".src." | Dest=".dest." | VendorAccount=".vendor_account.""\
| whiteleafai\
| sendalert risk param.risk_score=event_count param.risk_object_field=target param.risk_object_type=user\
| sendalert risk param.risk_score=event_count param.risk_object_field=src param.risk_object_type=system

[Threat - WL062 - Azure Automation Creation - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1136.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL062 - Azure Automation Creation
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 3 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=mscs:azure:audit \
(operationName.localizedValue="Create or Update an Azure Automation account" OR (operationName.localizedValue="Create or Update an Azure Automation Runbook" AND object!="AzureAutomationTutorial*")) \
status.value=Succeeded \
| dedup object \
| rename claims.ipaddr as src, subscriptionId as vendor_account, operationName.localizedValue as signature \
| eval activity_type=case(\
    signature=="Create or Update an Azure Automation account", "AutomationAccountCreation",\
    signature=="Create or Update an Azure Automation Runbook", "RunbookCreation",\
    true(), "Other")\
| stats count as activity_count min(_time) as firstTime max(_time) as lastTime values(signature) as signature values(object) as object values(object_path) as object_path by user src dest vendor_account vendor_product activity_type\
| eval whiteleafuc="WLUC62"\
| eval prompt=case(\
    activity_type=="AutomationAccountCreation", "Previously unseen Azure Automation Account creation detected: user=" . user . ", src=" . src . ", dest=" . dest . ", object=" . object . ", path=" . object_path . ", firstSeen=" . strftime(firstTime, "%Y-%m-%dT%H:%M:%S") . ", lastSeen=" . strftime(lastTime, "%Y-%m-%dT%H:%M:%S") . ", count=" . activity_count,\
    activity_type=="RunbookCreation", "Previously unseen Azure Runbook creation detected: user=" . user . ", src=" . src . ", dest=" . dest . ", object=" . object . ", path=" . object_path . ", firstSeen=" . strftime(firstTime, "%Y-%m-%dT%H:%M:%S") . ", lastSeen=" . strftime(lastTime, "%Y-%m-%dT%H:%M:%S") . ", count=" . activity_count,\
    true(), "Azure Automation activity: src=" . src . ", dest=" . dest . ", object=" . object . ", type=" . activity_type)\
| whiteleafai\
| sendalert risk param.risk_score=activity_count param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=activity_count param.risk_object_field=src param.risk_object_type=system

[Threat - WL061 - Azure Remote Management - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1021.007","T1072","T1529","T1484","T1562.001","T1562.004","T1202","T1105"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL061 - Azure Remote Management
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 2 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=azure:monitor:activity \
(operationName="*DeviceHealthScript*" \
 OR operationName="*DeviceManagementConfigurationPolicy*" \
 OR operationName="*ManagedDevice*")\
| rename identity as user, \
         properties.TargetObjectIds{} as TargetObjectId, \
         properties.TargetDisplayNames{} as TargetDisplayName, \
         properties.Actor.IsDelegatedAdmin as user_isDelegatedAdmin \
| eval details=mvzip('properties.Targets{}.ModifiedProperties{}.Name','properties.Targets{}.ModifiedProperties{}.New',": "), \
       action=case(\
           match(operationName, "DeviceHealthScript"), \
               lower(replace(replace(replace(replace(operationName, "^\\w+?", ""), "patch", "updated"), "create", "created"), "delete", "deleted")),\
           match(operationName, "DeviceManagementConfigurationPolicy"), \
               if(match(operationName, "Assignment$"), "assigned", lower(replace(replace(replace(replace(operationName, "^\\w+", ""), "Patch", "updated"), "Create", "created"), "Delete", "deleted"))),\
           match(operationName, "ManagedDevice"),\
               lower(replace(operationName, "^\\w+\\s", "")))\
| fillnull value="N/A"\
| stats count min(_time) as firstTime max(_time) as lastTime values(action) as actions values(TargetDisplayName) as targets values(TargetObjectId) as target_ids values(details) as details by user, user_type, user_isDelegatedAdmin, status, operationName, tenantId, correlationId\
| eval prompt="action(s)=" . mvjoin(actions,", ") . ", target(s)=" . mvjoin(targets,", ") . ", operationName=" . operationName\
| eval whiteleafuc="WLUC61"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user

[Threat - WL063 - Azure Successful Authentication - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1078.004","T1586.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL063 - Azure Successful Authentication
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 4 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=azure:monitor:aad category=SignInLogs \
(properties.authenticationDetails{}.succeeded=true AND \
    (properties.appDisplayName="Microsoft Azure PowerShell" \
    OR properties.authenticationRequirement="singleFactorAuthentication")) \
| rename properties.* as * \
| rename userAgent as user_agent \
| fillnull \
| eval auth_type=case(\
    appDisplayName=="Microsoft Azure PowerShell", "PowerShell",\
    authenticationRequirement=="singleFactorAuthentication", "Single-Factor") \
| stats count min(_time) as firstTime max(_time) as lastTime by dest user src vendor_account vendor_product user_agent signature auth_type\
| eval prompt="auth_type=" . auth_type . ", src=" . src . ", user_agent=" . user_agent . ", vendor_account=" . vendor_account . ", vendor_product=" . vendor_product . ", signature=" . signature . ", firstTime=" . tostring(firstTime) . ", lastTime=" . tostring(lastTime)\
```get rid of fields that aren't needed in prompt/stats pipe```\
| eval whiteleafuc="WLUC632"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL072 - AWS Open S3 Buckets - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1530"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL072 - AWS Open S3 Buckets
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 13 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=aws:cloudtrail eventSource="s3.amazonaws.com" (userAgent="[aws-cli*" OR userAgent=aws-cli* ) eventName=PutBucketAcl OR requestParameters.accessControlList.x-amz-grant-read-acp IN ("*AuthenticatedUsers","*AllUsers") OR requestParameters.accessControlList.x-amz-grant-write IN ("*AuthenticatedUsers","*AllUsers") OR requestParameters.accessControlList.x-amz-grant-write-acp IN ("*AuthenticatedUsers","*AllUsers") OR requestParameters.accessControlList.x-amz-grant-full-control IN ("*AuthenticatedUsers","*AllUsers") \
| rename requestParameters.bucketName AS bucketName \
| fillnull \
| stats count min(_time) as firstTime max(_time) as lastTime by userIdentity.userName userIdentity.principalId userAgent bucketName requestParameters.accessControlList.x-amz-grant-read requestParameters.accessControlList.x-amz-grant-read-acp requestParameters.accessControlList.x-amz-grant-write requestParameters.accessControlList.x-amz-grant-write-acp requestParameters.accessControlList.x-amz-grant-full-control \
| rename userIdentity.userName as user \
\
```Still need to merge```\
\
sourcetype=aws:cloudtrail eventSource=s3.amazonaws.com eventName=PutBucketAcl \
| rex field=_raw "(?<json_field>{.+})" \
| spath input=json_field output=grantees path=requestParameters.AccessControlPolicy.AccessControlList.Grant{} \
| search grantees=* \
| mvexpand grantees \
| spath input=grantees output=uri path=Grantee.URI \
| spath input=grantees output=permission path=Permission \
| search uri IN ("http://acs.amazonaws.com/groups/global/AllUsers","http://acs.amazonaws.com/groups/global/AuthenticatedUsers") \
| search permission IN ("READ","READ_ACP","WRITE","WRITE_ACP","FULL_CONTROL") \
| rename requestParameters.bucketName AS bucketName \
| stats count min(_time) as firstTime max(_time) as lastTime by user_arn userIdentity.principalId userAgent uri permission bucketName

[Threat - WL064 - Azure PIM Role - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1098.003"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL064 - Azure PIM Role
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = ( sourcetype=azure:monitor:aad operationName="Add eligible member to role in PIM completed*" \
OR sourcetype=azure:monitor:aad operationName="Add member to role completed (PIM activation)" )\
| rename properties.* as * \
| rename initiatedBy.user.userPrincipalName as initiatedBy \
| fillnull \
| eval activity_type=case(\
    operationName=="Add eligible member to role in PIM completed*", "PIM role assignment",\
    operationName=="Add member to role completed (PIM activation)", "PIM role activation")\
| stats count min(_time) as firstTime max(_time) as lastTime \
        by dest user src vendor_account vendor_product initiatedBy signature activity_type operationName\
| eval prompt=", dest=" . dest . ", src=" . src . ", initiatedBy=" . initiatedBy . ", operationName=" . operationName . ", activity_type=" . activity_type\
| eval whiteleafuc="WLUC64"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL065 - Azure New MFA Method - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1098.005","T1556.006"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL065 - Azure New MFA Method
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 6 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = sourcetype=azure:monitor:aad \
| eval activity_type=case(\
    operationName=="Update user" AND mvindex('targetResources{}.modifiedProperties{}.displayName',0)=="StrongAuthenticationMethod", "Update user MFA method",\
    operationName=="User registered security info" AND category=="AuditLogs" AND properties.operationType=="Add", "User registered MFA method",\
    true(), null())\
| search activity_type=*\
| rename properties.* as * \
| rename targetResources{}.* as * \
| eval propertyName = mvindex('modifiedProperties{}.displayName',0)\
| eval oldvalue = mvindex('modifiedProperties{}.oldValue',0)\
| eval newvalue = mvindex('modifiedProperties{}.newValue',0)\
| rex field=newvalue max_match=0 "(?i)(?<new_method_type>\"MethodType\")" \
| rex field=oldvalue max_match=0 "(?i)(?<old_method_type>\"MethodType\")" \
| eval count_new_method_type = coalesce(mvcount(new_method_type), 0) \
| eval count_old_method_type = coalesce(mvcount(old_method_type), 0) \
| rename userAgent as user_agent \
| fillnull \
| stats count min(_time) as firstTime max(_time) as lastTime \
    by dest user src vendor_account vendor_product user_agent action result resultDescription signature newvalue oldvalue activity_type\
| eval prompt="dest=" . dest . ", src=" . src . ", activity_type=" . activity_type . ", signature=" . signature\
| eval whiteleafuc="WLUC65"\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=user param.risk_object_type=user\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src param.risk_object_type=system

[Threat - WL054 - AWS S3 Access Detection - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1530"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = WL054 - AWS S3 Access Detection
action.customsearchbuilder.enabled = false
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 54 * * * *
disabled = 1
dispatch.earliest_time = -70m
dispatch.latest_time = -10m
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `whiteleaf_aws` sourcetype=aws:s3:accesslogs http_status=200\
| stats min(_time) as eventTime by bucket_name remote_ip, operation\
| lookup previously_seen_S3_access_from_remote_ip.csv remote_ip bucket_name OUTPUT firstTime\
| eval newIP = if(isnull(firstTime) OR firstTime >= relative_time(now(), "-24h@h"), 1, 0)\
| where newIP = 1\
| iplocation remote_ip\
| rename remote_ip as src_ip\
| table bucket_name src_ip City Country operation \
| eval whiteleafuc = "WLUC54"\
| eval prompt= src_ip\
| whiteleafai\
| sendalert risk param.risk_score=risk_score param.risk_object_field=bucket_name param.risk_object_type=system\
| sendalert risk param.risk_score=risk_score param.risk_object_field=src_ip param.risk_object_type=user
